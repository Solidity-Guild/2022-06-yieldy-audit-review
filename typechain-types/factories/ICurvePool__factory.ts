/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { ICurvePool, ICurvePoolInterface } from "../ICurvePool";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "coins",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int128",
        name: "_from",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "_to",
        type: "int128",
      },
      {
        internalType: "uint256",
        name: "_dx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_min_dy",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "exchange",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int128",
        name: "_from",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "_to",
        type: "int128",
      },
      {
        internalType: "uint256",
        name: "_dx",
        type: "uint256",
      },
    ],
    name: "get_dy",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class ICurvePool__factory {
  static readonly abi = _abi;
  static createInterface(): ICurvePoolInterface {
    return new utils.Interface(_abi) as ICurvePoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ICurvePool {
    return new Contract(address, _abi, signerOrProvider) as ICurvePool;
  }
}
